						.386p

						PUBLIC		SNDINT
						PUBLIC		MIDI
						PUBLIC		FNT
						PUBLIC		SND
						PUBLIC		SPR
						PUBLIC		MOS_UPDATE
						PUBLIC		MOS
						PUBLIC		EGB
						PUBLIC		SYSINFO

						ASSUME CS:CODE

BIOSERR_INVALID_REQUEST	EQU		0FFh

						EXTRN EGB_INIT:NEAR
						EXTRN EGB_RESOLUTION:NEAR
						EXTRN EGB_02H_DISPLAYSTART:NEAR
						EXTRN EGB_VIEWPORT:NEAR
						EXTRN EGB_PALETTE:NEAR
						EXTRN EGB_WRITEPAGE:NEAR
						EXTRN EGB_06H_DISPLAYPAGE:NEAR
						EXTRN EGB_COLOR:NEAR
						EXTRN EGB_COLORIGRB:NEAR
						EXTRN EGB_PASTEL:NEAR
						EXTRN EGB_WRITEMODE:NEAR
						EXTRN EGB_LINEPATTERN:NEAR
						EXTRN EGB_PAINTMODE:NEAR
						EXTRN EGB_HATCHINGPATTERN:NEAR
						EXTRN EGB_TILEPATTERN:NEAR
						EXTRN EGB_0FH_MASKREGION:NEAR
						EXTRN EGB_10H_MASK:NEAR
						EXTRN EGB_PEN:NEAR
						EXTRN EGB_PENSIZE:NEAR
						EXTRN EGB_PENSTYLE:NEAR
						EXTRN EGB_MASKBIT:NEAR
						EXTRN EGB_TEXTDIRECTION:NEAR
						EXTRN EGB_TEXTDISPLAYDIRECTION:NEAR
						EXTRN EGB_17H_TEXTSPACE:NEAR
						EXTRN EGB_TEXTZOOM:NEAR
						EXTRN EGB_FONTSTYLE:NEAR
						EXTRN EGB_SUPERIMPOSE:NEAR
						EXTRN EGB_DIGITIZE:NEAR
						EXTRN EGB_RESOLUTION_BY_HANDLE:NEAR
						EXTRN EGB_CLEARSCREEN:NEAR
						EXTRN EGB_PARTCLEARSCREEN:NEAR
						EXTRN EGB_22H_GETBLOCK1BIT:NEAR
						EXTRN EGB_23H_PUTBLOCK1BIT:NEAR
						EXTRN EGB_24H_GETBLOCK:NEAR
						EXTRN EGB_25H_PUTBLOCK:NEAR
						EXTRN EGB_26H_GETBLOCKZOOM:NEAR
						EXTRN EGB_27H_PUTBLOCKZOOM:NEAR
						EXTRN EGB_GRAPHICCURSOR:NEAR
						EXTRN EGB_MASKDATA:NEAR
						EXTRN EGB_SCROLL:NEAR
						EXTRN EGB_PARTSCROLL:NEAR
						EXTRN EGB_REGION:NEAR
						EXTRN EGB_COPY:NEAR
						EXTRN EGB_ROTATE:NEAR
						EXTRN EGB_RESOLVE:NEAR
						EXTRN EGB_40H_PSET:NEAR
						EXTRN EGB_41H_CONNECT:NEAR
						EXTRN EGB_42H_UNCONNECT:NEAR
						EXTRN EGB_POLYGON:NEAR
						EXTRN EGB_ROTATEPOLYGON:NEAR
						EXTRN EGB_TRIANGLE:NEAR
						EXTRN EGB_RECTANGLE:NEAR
						EXTRN EGB_CIRCLE:NEAR
						EXTRN EGB_ARC:NEAR
						EXTRN EGB_FAN:NEAR
						EXTRN EGB_ELLIPSE:NEAR
						EXTRN EGB_ELLIPTICARC:NEAR
						EXTRN EGB_ELLIPTICFAN:NEAR
						EXTRN EGB_4DH_PAINT:NEAR
						EXTRN EGB_4EH_CLOSEPAINT:NEAR
						EXTRN EGB_POINT:NEAR
						EXTRN EGB_BOW:NEAR
						EXTRN EGB_BOW2:NEAR
						EXTRN EGB_SJISSTRING:NEAR
						EXTRN EGB_CONNECTSJISSTRING:NEAR
						EXTRN EGB_ASCIISTRING:NEAR
						EXTRN EGB_CONNECTASCIISTRING:NEAR
						EXTRN EGB_JISSTRING:NEAR
						EXTRN EGB_CONNECTJISSTRING:NEAR
						EXTRN EGB_ANYCHAR:NEAR
						EXTRN EGB_UNSUPPORTED:NEAR

						EXTRN FNT_00H_GETANK:NEAR
						EXTRN FNT_01H_GETKANJI:NEAR
						EXTRN FNT_02H_SJIS_TO_JIS:NEAR
						EXTRN FNT_03H_JIS_TO_SJIS:NEAR

						EXTRN SPR_INIT:NEAR
						EXTRN SPR_DISPLAY:NEAR
						EXTRN SPR_DEFINE:NEAR
						EXTRN SPR_SETPALETTEBLOCK:NEAR
						EXTRN SPR_SETPOSITION:NEAR
						EXTRN SPR_SETATTRIBUTE:NEAR
						EXTRN SPR_SETMOTION:NEAR
						EXTRN SPR_SETOFFSET:NEAR
						EXTRN SPR_READATTRIBUTE:NEAR

						EXTRN SND_INIT:NEAR
						; What about SND_END?
						EXTRN SND_KEY_ON:NEAR
						EXTRN SND_KEY_OFF:NEAR
						EXTRN SND_PAN_SET:NEAR
						EXTRN SND_INST_CHANGE:NEAR
						EXTRN SND_INST_WRITE:NEAR
						EXTRN SND_INST_READ:NEAR
						EXTRN SND_PITCH_CHANGE:NEAR
						EXTRN SND_VOLUME_CHANGE:NEAR
						EXTRN SND_KEY_ABORT:NEAR
						EXTRN SND_STATUS:NEAR
						EXTRN SND_10H_FM_READ_STATUS:NEAR
						EXTRN SND_11H_FM_WRITE_DATA:NEAR
						EXTRN SND_12H_FM_READ_DATA:NEAR
						EXTRN SND_13H_FM_WRITE_SAVE_ATA:NEAR
						EXTRN SND_14H_FM_READ_SAVE_DATA:NEAR
						EXTRN SND_15H_FM_TIMER_A_SET:NEAR
						EXTRN SND_16H_FM_TIMER_B_SET:NEAR
						EXTRN SND_17H_FM_TIMER_A_RESTART:NEAR
						EXTRN SND_18H_FM_TIMER_B_RESTART:NEAR
						EXTRN SND_FM_LFO_SET:NEAR
						EXTRN SND_20H_PCM_WAVE_TRANSFER:NEAR
						EXTRN SND_21H_PCM_MODE_SET:NEAR
						EXTRN SND_22H_PCM_SOUND_SET:NEAR
						EXTRN SND_23H_PCM_SOUND_DELETE:NEAR
						EXTRN SND_24H_PCM_REC_START:NEAR
						EXTRN SND_25H_2EH_PCM_VOICE_PLAY:NEAR
						EXTRN SND_26H_PCM_REC_STOP:NEAR
						EXTRN SND_27H_PCM_PCM_VOICE_STOP:NEAR
						EXTRN SND_28H_PCM_PCM_VOICE_STATUS:NEAR
						EXTRN SND_29H_PCM_ABORT:NEAR
						EXTRN SND_2AH_PCM_PCMRAM_TO_MAINRAM:NEAR
						EXTRN SND_2BH_PCM_PCMRAM_TO_PCMRAM:NEAR
						EXTRN SND_2CH_PCM_TRANSFER2:NEAR
						EXTRN SND_FM_INIT:NEAR
						EXTRN SND_FM_REGWRITE:NEAR
						EXTRN SND_JOY_IN:NEAR
						EXTRN SND_JOY_IN_2:NEAR
						EXTRN SND_JOY_OUT:NEAR
						EXTRN SND_43H_ELEVOL_SET:NEAR
						EXTRN SND_44H_ELEVOL_INIT:NEAR
						EXTRN SND_45H_ELEVOL_READ:NEAR
						EXTRN SND_46H_ELEVOL_MUTE:NEAR
						EXTRN SND_48H_UNKNOWN_USED_BY_VSGP:NEAR
						EXTRN SND_49H_ELEVOL_ALL_MUTE:NEAR
						EXTRN SND_4AH_UNPUBLISHED_FUNCTION:NEAR
						EXTRN SND_ENVELOPE_INT_HANDLER:NEAR
						EXTRN SND_VOICE_INT_HANDLER:NEAR
						EXTRN SND_NOP:NEAR
						EXTRN SND_E0H_SETGLOBAL_GAMEDEV:NEAR


						EXTRN MOS_00H_START:NEAR
						EXTRN MOS_01H_END:NEAR
						EXTRN MOS_02H_DISP:NEAR
						EXTRN MOS_03H_RDPOS:NEAR
						EXTRN MOS_04H_SETPOS:NEAR
						EXTRN MOS_05H_RDON:NEAR
						EXTRN MOS_06H_RDOFF:NEAR
						EXTRN MOS_07H_HORIZON:NEAR
						EXTRN MOS_08H_VERTICAL:NEAR
						EXTRN MOS_09H_TYPE:NEAR
						EXTRN MOS_0AH_MOTION:NEAR
						EXTRN MOS_0BH_ENTSUB:NEAR
						EXTRN MOS_0CH_PULSE:NEAR
						EXTRN MOS_0DH_RESOLUTION:NEAR
						EXTRN MOS_0EH_WRITEPAGE:NEAR
						EXTRN MOS_0FH_COLOR:NEAR
						EXTRN MOS_10H_TILEPATTERN:NEAR
						EXTRN MOS_11H_VIEWHORIZON:NEAR
						EXTRN MOS_12H_VIEWVERTICAL:NEAR
						EXTRN MOS_13H_BTNXCHG:NEAR
						EXTRN MOS_14H_ACCELERATION:NEAR

						EXTRN MOS_GetActive:NEAR
						EXTRN MOS_GetDisp:NEAR
						EXTRN MOS_INTERVAL:NEAR


						EXTRN SNDINT_01H_REGISTER_MOUSE_INT:NEAR
						EXTRN SNDINT_02H_UNREGISTER_MOUSE_INT:NEAR
						EXTRN SNDINT_03H_REGISTER_SOUND_INT:NEAR
						EXTRN SNDINT_04H_UNREGISTER_SOUND_INT:NEAR
						EXTRN SNDINT_05H_GET_MOUSE_INT_COUNT:NEAR
						EXTRN SNDINT_06H_REGISTER_INT_PROC:NEAR
						EXTRN SNDINT_07H_UNREGISTER_INT_PROC:NEAR
						EXTRN SNDINT_08H_GET_INT_PROC:NEAR
						EXTRN SNDINT_09H_GET_INT_STATUS:NEAR
						EXTRN Handle_INT4DH:NEAR


						EXTRN SYSINFO_05H_GET_PALETTE:NEAR
						EXTRN SYSINFO_22H_GET_ELEVOL_MUTE:NEAR
						EXTRN SYSINFO_30H_SAVE_INTVEC:NEAR
						EXTRN SYSINFO_31H_RETRIEVE_INTVEC:NEAR
						EXTRN SYSINFO_NOP:NEAR


SAVED_EDI				EQU		00H
SAVED_ESI				EQU		04H
SAVED_EBP				EQU		08H
SAVED_ESP				EQU		0CH
SAVED_EBX				EQU		10H
SAVED_EDX				EQU		14H
SAVED_ECX				EQU		18H
SAVED_EAX				EQU		1CH
SAVED_FS				EQU		20H
SAVED_GS				EQU		24H
SAVED_ES				EQU		28H
SAVED_DS				EQU		2CH
SAVED_FLAGS				EQU		30H



SAVE_WORLD				MACRO
						PUSHFD
						PUSH	FS
						PUSH	GS
						PUSH	ES
						PUSH	DS
						PUSHAD
						ENDM

RESTORE_WORLD			MACRO
						POPAD
						POP		DS
						POP		ES
						POP		GS
						POP		FS
						POPFD
						ENDM

TSUGARU_BREAK			MACRO
						OUT		0EAH,AL
						ENDM

TSUGARU_STATUS			MACRO
						OUT		0EBH,AL
						ENDM

TGBIOS_SEG				EQU		0110H

CODE					SEGMENT

						DB		"TSUGARU BIOS",0  ; DROPHDR.EXP will look for this keyword.  Do not change.

						ORG		20H
						DD		OFFSET EGB
						DW		TGBIOS_SEG

						ORG		40H
						DD		OFFSET MOS
						DW		TGBIOS_SEG

						ORG		48H
						DD		OFFSET MOS_UPDATE
						DW		TGBIOS_SEG

						ORG		60H
						DD		OFFSET SPR
						DW		TGBIOS_SEG

						ORG		80H
						DD		OFFSET SND
						DW		TGBIOS_SEG

						ORG		0A0H
						DD		OFFSET FNT
						DW		TGBIOS_SEG

						ORG		0C0H
						DD		OFFSET MIDI
						DW		TGBIOS_SEG

						ORG		100H
						DD		0		 ; EGB_FLAGS

						ORG		1A0H
						DD		OFFSET SNDINT
						DW		TGBIOS_SEG

						ORG		1A8H
						DD		OFFSET Handle_INT4DH ; Undocumented.  F**K!  Only found in Appendix C9 sample code. p.756
						DW		TGBIOS_SEG

						ORG		1C0H
						DD		OFFSET SYSINFO
						DW		TGBIOS_SEG

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

						ORG		200H

EGB						PROC	FAR
						SAVE_WORLD

						CMP		AH,2FH
						JA		EGB_ABOVE_2FH

						MOVZX	EBP,AH
						CALL	DWORD PTR CS:[EGB_JUMPTABLE_00H_TO_2FH+EBP*4]
						JMP		EGB_EXIT

EGB_ABOVE_2FH:
						CMP		AH,51H
						JA		EGB_ABOVE_51H
						MOVZX	EBP,AH
						SUB		EBP,40H
						JB		EGB_EXIT
						CALL	DWORD PTR CS:[EGB_JUMPTABLE_40H_TO_51H+EBP*4]
						JMP		EGB_EXIT

EGB_ABOVE_51H:
						CMP		AH,66H
						JA		EGB_EXIT
						MOVZX	EBP,AH
						SUB		EBP,60H
						JB		EGB_EXIT
						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[EGB_JUMPTABLE_60H_TO_66H+EBP*4]

EGB_EXIT:
						RESTORE_WORLD
						RET
EGB						ENDP

EGB_JUMPTABLE_00H_TO_2FH:
						DD EGB_INIT					; 00H
						DD EGB_RESOLUTION			; 01H
						DD EGB_02H_DISPLAYSTART		; 02H
						DD EGB_VIEWPORT				; 03H
						DD EGB_PALETTE				; 04H
						DD EGB_WRITEPAGE			; 05H
						DD EGB_06H_DISPLAYPAGE		; 06H
						DD EGB_COLOR				; 07H
						DD EGB_COLORIGRB			; 08H
						DD EGB_PASTEL				; 09H
						DD EGB_WRITEMODE			; 0AH
						DD EGB_LINEPATTERN			; 0BH
						DD EGB_PAINTMODE			; 0CH
						DD EGB_HATCHINGPATTERN		; 0DH
						DD EGB_TILEPATTERN			; 0EH
						DD EGB_0FH_MASKREGION		; 0FH
						DD EGB_10H_MASK				; 10H
						DD EGB_PEN					; 11H
						DD EGB_PENSIZE				; 12H
						DD EGB_PENSTYLE				; 13H
						DD EGB_MASKBIT				; 14H
						DD EGB_TEXTDIRECTION		; 15H
						DD EGB_TEXTDISPLAYDIRECTION	; 16H
						DD EGB_17H_TEXTSPACE		; 17H
						DD EGB_TEXTZOOM				; 18H
						DD EGB_FONTSTYLE			; 19H
						DD EGB_SUPERIMPOSE			; 1AH
						DD EGB_DIGITIZE				; 1BH
						DD EGB_RESOLUTION_BY_HANDLE	; 1CH
						DD EGB_UNSUPPORTED			; 1DH
						DD EGB_UNSUPPORTED			; 1EH
						DD EGB_UNSUPPORTED			; 1FH
						DD EGB_CLEARSCREEN			; 20H
						DD EGB_PARTCLEARSCREEN		; 21H
						DD EGB_22H_GETBLOCK1BIT		; 22H
						DD EGB_23H_PUTBLOCK1BIT		; 23H
						DD EGB_24H_GETBLOCK			; 24H
						DD EGB_25H_PUTBLOCK			; 25H
						DD EGB_26H_GETBLOCKZOOM		; 26H
						DD EGB_27H_PUTBLOCKZOOM		; 27H
						DD EGB_GRAPHICCURSOR		; 28H
						DD EGB_MASKDATA				; 29H
						DD EGB_SCROLL				; 2AH
						DD EGB_PARTSCROLL			; 2BH
						DD EGB_REGION				; 2CH
						DD EGB_COPY					; 2DH
						DD EGB_ROTATE				; 2EH
						DD EGB_RESOLVE				; 2FH

EGB_JUMPTABLE_40H_TO_51H:
						DD EGB_40H_PSET					; 40H
						DD EGB_41H_CONNECT				; 41H
						DD EGB_42H_UNCONNECT			; 42H
						DD EGB_POLYGON				; 43H
						DD EGB_ROTATEPOLYGON		; 44H
						DD EGB_TRIANGLE				; 45H
						DD EGB_RECTANGLE			; 46H
						DD EGB_CIRCLE				; 47H
						DD EGB_ARC					; 48H
						DD EGB_FAN					; 49H
						DD EGB_ELLIPSE				; 4AH
						DD EGB_ELLIPTICARC			; 4BH
						DD EGB_ELLIPTICFAN			; 4CH
						DD EGB_4DH_PAINT			; 4DH
						DD EGB_4EH_CLOSEPAINT		; 4EH
						DD EGB_POINT				; 4FH
						DD EGB_BOW					; 50H
						DD EGB_BOW2					; 51H

EGB_JUMPTABLE_60H_TO_66H:
						DD EGB_SJISSTRING			; 60H
						DD EGB_CONNECTSJISSTRING	; 61H
						DD EGB_ASCIISTRING			; 62H
						DD EGB_CONNECTASCIISTRING	; 63H
						DD EGB_JISSTRING			; 64H
						DD EGB_CONNECTJISSTRING		; 65H
						DD EGB_ANYCHAR				; 66H

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MOS						PROC	FAR
						SAVE_WORLD

						CMP		AH,14H
						JA		MOS_ERROR

						MOVZX	EBP,AH
						CALL	DWORD PTR CS:[MOS_JUMPTABLE+EBP*4]

						RESTORE_WORLD
						RET

MOS_ERROR:
						RESTORE_WORLD
						MOV		AH,0FFH
						RET

MOS						ENDP

MOS_JUMPTABLE:
						DD	MOS_00H_START
						DD	MOS_01H_END
						DD	MOS_02H_DISP
						DD	MOS_03H_RDPOS
						DD	MOS_04H_SETPOS
						DD	MOS_05H_RDON
						DD	MOS_06H_RDOFF
						DD	MOS_07H_HORIZON
						DD	MOS_08H_VERTICAL
						DD	MOS_09H_TYPE
						DD	MOS_0AH_MOTION
						DD	MOS_0BH_ENTSUB
						DD	MOS_0CH_PULSE
						DD	MOS_0DH_RESOLUTION
						DD	MOS_0EH_WRITEPAGE
						DD	MOS_0FH_COLOR
						DD	MOS_10H_TILEPATTERN
						DD	MOS_11H_VIEWHORIZON
						DD	MOS_12H_VIEWVERTICAL
						DD	MOS_13H_BTNXCHG
						DD	MOS_14H_ACCELERATION


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MOS_UPDATE				PROC	FAR
						SAVE_WORLD
						PUSH	SS	; High-C Assumes SS=DS.  This process MIGHT be called from an interrupt handler.
						POP		DS
						CALL	MOS_INTERVAL
						RESTORE_WORLD
						RET
MOS_UPDATE				ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SPR						PROC	FAR
						SAVE_WORLD

						CMP		AH,8
						JA		SPR_INVALID_REQUEST

						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SPR_JUMPTABLE+EAX*4]

						RESTORE_WORLD
						RET

SPR_INVALID_REQUEST:
						RESTORE_WORLD
						MOV		AH,BIOSERR_INVALID_REQUEST
						RET

SPR						ENDP

SPR_JUMPTABLE:
						DD SPR_INIT
						DD SPR_DISPLAY
						DD SPR_DEFINE
						DD SPR_SETPALETTEBLOCK
						DD SPR_SETPOSITION
						DD SPR_SETATTRIBUTE
						DD SPR_SETMOTION
						DD SPR_SETOFFSET
						DD SPR_READATTRIBUTE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SND						PROC	FAR
						SAVE_WORLD
						CLI

						CMP		AH,0AH
						JA		SND_NOT_0AH
						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SND_JUMPTABLE_00H_TO_0AH+EAX*4]
						JMP		SND_EXIT

SND_NOT_0AH:
						CMP		AH,19H
						JA		SND_NOT_19H
						SUB		AH,10H
						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SND_JUMPTABLE_10H_TO_19H+EAX*4]
						JMP		SND_EXIT

SND_NOT_19H:
						CMP		AH,31H
						JA		SND_NOT_31H
						SUB		AH,20H
						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SND_JUMPTABLE_20H_TO_31H+EAX*4]
						JMP		SND_EXIT

SND_NOT_31H:
						CMP		AH,4AH
						JA		SND_NOT_4AH
						SUB		AH,40H
						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SND_JUMPTABLE_40H_TO_4AH+EAX*4]
						JMP		SND_EXIT

SND_NOT_4AH:
						CMP		AH,50H
						JNE		SND_NOT_50H
						CALL	SND_ENVELOPE_INT_HANDLER
						JMP		SND_EXIT

SND_NOT_50H:
						CMP		AH,51H
						JNE		SND_NOT_51H
						CALL	SND_VOICE_INT_HANDLER
						JMP		SND_EXIT

SND_NOT_51H:
						CMP		AH,0E0H
						JNE		SND_NOT_E0H
						CALL	SND_E0H_SETGLOBAL_GAMEDEV
						; JMP		SND_EXIT

SND_NOT_E0H:

SND_EXIT:
						RESTORE_WORLD
						RET

SND_INVALID_REQUEST:
						RESTORE_WORLD
						MOV		AH,BIOSERR_INVALID_REQUEST
						RET

						RET
SND						ENDP

SND_JUMPTABLE_00H_TO_0AH:
						DD		SND_INIT
						DD		SND_KEY_ON
						DD		SND_KEY_OFF
						DD		SND_PAN_SET
						DD		SND_INST_CHANGE
						DD		SND_INST_WRITE
						DD		SND_INST_READ
						DD		SND_PITCH_CHANGE
						DD		SND_VOLUME_CHANGE
						DD		SND_KEY_ABORT
						DD		SND_STATUS

SND_JUMPTABLE_10H_TO_19H:
						DD		SND_10H_FM_READ_STATUS
						DD		SND_11H_FM_WRITE_DATA
						DD		SND_12H_FM_READ_DATA
						DD		SND_13H_FM_WRITE_SAVE_ATA
						DD		SND_14H_FM_READ_SAVE_DATA
						DD		SND_15H_FM_TIMER_A_SET
						DD		SND_16H_FM_TIMER_B_SET
						DD		SND_17H_FM_TIMER_A_RESTART
						DD		SND_18H_FM_TIMER_B_RESTART
						DD		SND_FM_LFO_SET

SND_JUMPTABLE_20H_TO_31H:
						DD		SND_20H_PCM_WAVE_TRANSFER
						DD		SND_21H_PCM_MODE_SET
						DD		SND_22H_PCM_SOUND_SET
						DD		SND_23H_PCM_SOUND_DELETE
						DD		SND_24H_PCM_REC_START
						DD		SND_25H_2EH_PCM_VOICE_PLAY
						DD		SND_26H_PCM_REC_STOP
						DD		SND_27H_PCM_PCM_VOICE_STOP
						DD		SND_28H_PCM_PCM_VOICE_STATUS
						DD		SND_29H_PCM_ABORT
						DD		SND_2AH_PCM_PCMRAM_TO_MAINRAM
						DD		SND_2BH_PCM_PCMRAM_TO_PCMRAM
						DD		SND_2CH_PCM_TRANSFER2
						DD		SND_NOP
						DD		SND_25H_2EH_PCM_VOICE_PLAY
						DD		SND_NOP
						DD		SND_FM_INIT
						DD		SND_FM_REGWRITE

SND_JUMPTABLE_40H_TO_4AH:
						DD		SND_JOY_IN
						DD		SND_JOY_IN_2
						DD		SND_JOY_OUT
						DD		SND_43H_ELEVOL_SET
						DD		SND_44H_ELEVOL_INIT
						DD		SND_45H_ELEVOL_READ
						DD		SND_46H_ELEVOL_MUTE
						DD		SND_NOP
						DD		SND_48H_UNKNOWN_USED_BY_VSGP
						DD		SND_49H_ELEVOL_ALL_MUTE
						DD		SND_4AH_UNPUBLISHED_FUNCTION

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FNT						PROC	FAR
						SAVE_WORLD

						CMP		AH,4
						JAE		FNT_ERROR

						MOVZX	EBP,AH
						CALL	DWORD PTR CS:[FNT_JUMPTABLE+EBP*4]

						RESTORE_WORLD
						RET

FNT_ERROR:
						RESTORE_WORLD
						MOV		AH,0FFh
						RET
FNT						ENDP

FNT_JUMPTABLE:
						DD		FNT_00H_GETANK,FNT_01H_GETKANJI,FNT_02H_SJIS_TO_JIS,FNT_03H_JIS_TO_SJIS


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MIDI					PROC	FAR
						TSUGARU_BREAK;
						RET
MIDI					ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SNDINT_JUMPTABLE:
						DD		SNDINT_01H_REGISTER_MOUSE_INT
						DD		SNDINT_02H_UNREGISTER_MOUSE_INT
						DD		SNDINT_03H_REGISTER_SOUND_INT
						DD		SNDINT_04H_UNREGISTER_SOUND_INT
						DD		SNDINT_05H_GET_MOUSE_INT_COUNT
						DD		SNDINT_06H_REGISTER_INT_PROC
						DD		SNDINT_07H_UNREGISTER_INT_PROC
						DD		SNDINT_08H_GET_INT_PROC
						DD		SNDINT_09H_GET_INT_STATUS


SNDINT					PROC	FAR
						SAVE_WORLD
						CLI

						CMP		AH,9
						JA		SNDINT_ERROR
						DEC		AH
						JL		SNDINT_ERROR

						MOVZX	EAX,AH
						CALL	DWORD PTR CS:[SNDINT_JUMPTABLE+EAX*4]

						RESTORE_WORLD
						RET

SNDINT_ERROR:
						RESTORE_WORLD
						MOV		AH,0FFh
						RET

SNDINT					ENDP



SYSINFO					PROC	FAR
						SAVE_WORLD

						CMP		AH,05H
						JNE		SYSINFO_NOT_05H
						CALL	SYSINFO_05H_GET_PALETTE
						JMP		SYSINFO_EXIT
SYSINFO_NOT_05H:

						CMP		AH,11H
						JNE		SYSINFO_NOT_11H
						CALL	MOS_GetDisp
						MOV		[ESP+SAVED_EAX],EAX
						JMP		SYSINFO_EXIT
SYSINFO_NOT_11H:
						CMP		AH,1AH
						JNE		SYSINFO_NOT_1AH
						CALL	MOS_GetActive
						MOV		[ESP+SAVED_EAX],EAX
						JMP		SYSINFO_EXIT
SYSINFO_NOT_1AH:

						CMP		AH,22H
						JNE		SYSINFO_NOT_22H
						CALL	SYSINFO_22H_GET_ELEVOL_MUTE
						JMP		SYSINFO_EXIT
SYSINFO_NOT_22H:
						CMP		AH,30H
						JNE		SYSINFO_NOT_30H
						CALL	SYSINFO_30H_SAVE_INTVEC
						JMP		SYSINFO_EXIT
SYSINFO_NOT_30H:
						CMP		AH,31H
						JNE		SYSINFO_NOT_31H
						CALL	SYSINFO_31H_RETRIEVE_INTVEC
						JMP		SYSINFO_EXIT
SYSINFO_NOT_31H:

						TSUGARU_BREAK;

SYSINFO_EXIT:
						RESTORE_WORLD
						RET
SYSINFO					ENDP

CODE					ENDS
						END
